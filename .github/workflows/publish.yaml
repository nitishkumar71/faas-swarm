name: ci-only

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    strategy:
      matrix:
        go-version: [1.13.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Get TAG
        id: get_tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - name: Setup
        run: sh ./contrib/ci.sh
      - name: Run CI
        run: make
      - name: Push Tags
        run: |
          if [ -z $DOCKER_NS ] ; then
            export DOCKER_NS=openfaas;
            fi
          
          
          docker tag $DOCKER_NS/faas-swarm:latest-dev $DOCKER_NS/faas-swarm:${{ steps.get_tag.outputs.TAG }};
          echo $DOCKER_PASSWORD | docker login -u=$DOCKER_USERNAME --password-stdin;
          docker push $DOCKER_NS/faas-swarm:${{ steps.get_tag.outputs.TAG }};

          docker tag $DOCKER_NS/faas-swarm:latest-dev quay.io/$DOCKER_NS/faas-swarm:${{ steps.get_tag.outputs.TAG }};
          echo $QUAY_PASSWORD  | docker login -u=$QUAY_USERNAME --password-stdin quay.io;
          docker push quay.io/$DOCKER_NS/faas-swarm:${{ steps.get_tag.outputs.TAG }};

          docker tag $DOCKER_NS/faas-swarm:latest-dev ghcr.io/$DOCKER_NS/faas-swarm:${{ steps.get_tag.outputs.TAG }};
          echo $GH_PASSWORD  | docker login -u=$GH_USERNAME --password-stdin ghcr.io;
          docker push ghcr.io/$DOCKER_NS/faas-swarm:${{ steps.get_tag.outputs.TAG }};